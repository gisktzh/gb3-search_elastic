stages:
  - build
  - deploy

variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""
  CA_CERTIFICATE: "$CA_CERTIFICATE"
  WORK_DIR: gb3-search
  TARGET_ENVIRONMENT:
    value: "staging"
    options:
      - "staging"
      - "uat"
      - "production"
    description: "deploy target ('staging' by default)"

build:
  image: docker:20.10.24
  stage: build
  tags: [docker]
  services:
    - name: docker:20.10.24-dind
      command:
        - /bin/sh
        - -c
        - echo "$CA_CERTIFICATE" > /usr/local/share/ca-certificates/proxywg.crt && update-ca-certificates && dockerd-entrypoint.sh || exit
  before_script:
    - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  script:
    - docker compose -f docker-compose.ktzh.yml build --pull
    - docker compose -f docker-compose.ktzh.yml push


deploy:
  image: ubuntu:24.04
  stage: deploy
  tags: [docker]
  rules:
    - if: $TARGET_ENVIRONMENT == "staging"
      variables:
        SSH_HOST: $SSH_HOST_STAGING_BACKEND
        SSH_KEY: $SSH_KEY_STAGING_BACKEND
    - if: $TARGET_ENVIRONMENT == "uat"
      variables:
        SSH_HOST: $SSH_HOST_UAT_BACKEND
        SSH_KEY: $SSH_KEY_UAT_BACKEND
  before_script:
    - apt-get -yq update
    - apt-get -yqq install openssh-client
    - install -m 600 -D /dev/null ~/.ssh/id_rsa
    - echo "$SSH_KEY" | base64 -d > ~/.ssh/id_rsa
    - ssh-keyscan -H $SSH_HOST > ~/.ssh/known_hosts
    - ssh $SSH_USER@$SSH_HOST "docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY"
  script:
    - scp docker-compose.ktzh.yml $SSH_USER@$SSH_HOST:~/$WORK_DIR/
    - ssh $SSH_USER@$SSH_HOST "cd $WORK_DIR && docker compose -f docker-compose.ktzh.yml up -d --pull always && exit"
  after_script:
    - rm -rf ~/.ssh
  when: manual